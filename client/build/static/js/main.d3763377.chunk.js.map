{"version":3,"sources":["components/navbar/NavBar.jsx","components/footer/Footer.jsx","pages/LandingPage.jsx","components/carousel/Carousel.jsx","pages/Contact.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","alt","Footer","LandingPage","Button","variant","style","color","library","add","faLinkedin","faGithub","DataCarousel","data","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","map","slide","i","Item","src","image","Caption","caption","description","github","icon","size","linkedin","defaultProps","textTransform","App","basename","exact","path","component","Contact","React","Component","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3763377.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"./\">Project III</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Link className=\"nav-link\" to=\"./\" alt=\"home\">Home</Link>\r\n          <Link className=\"nav-link\" to=\"./contact\" alt=\"contact\">Contact</Link>\r\n          <Link className=\"nav-link\" to=\"./login\" alt=\"login\">Login</Link>\r\n          <Link className=\"nav-link\" to=\"./register\" alt=\"register\">Register</Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"container-fluid text-center mt-3 p-3\">\r\n      <div id=\"copyright\">\r\n        Copyright &#xA9; 2020 T<p className=\"mirror\">E</p>AM-I Produ\r\n        <p className=\"mirror\">c</p>tionsâ„¢\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../components/navbar/NavBar\";\r\nimport Footer from \"../components/footer/Footer\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../assets/styles/landingpage.scss\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"landing-page-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\" />\r\n          <div className=\"jumbo-text p-5 m-5 col-lg-4\">\r\n            <h2>Hello we are</h2>\r\n            <h1>Project III</h1>\r\n            <p className=\"mt-4\">Start reducing your carbon footprint today</p>\r\n            <p className=\"mt-5\">\r\n              <Button variant=\"primary\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"./login\"\r\n                  alt=\"login\"\r\n                  style={{ color: \"white\" }}\r\n                >\r\n                  Get Started\r\n                </Link>\r\n              </Button>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-4\" />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n// FONT AWESOME ICONS v5\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(faLinkedin, faGithub);\r\n\r\nconst data = [\r\n  {\r\n    image: \"assets/images/josh-200x200.jpg\",\r\n    alt: \"Joshua\",\r\n    caption: \"Joshua M. Small\",\r\n    description: \"Front End Developer\",\r\n    github: \"https://github.com/WasteOfADrumBum\",\r\n    linkedin: \"https://www.linkedin.com/in/joshuamsmall\",\r\n  },\r\n  {\r\n    image: \"assets/images/max-200x200.jpg\",\r\n    alt: \"Max\",\r\n    caption: \"Max Gerringer\",\r\n    description: \"Front End Developer\",\r\n    github: \"https://github.com/maxgerringer\",\r\n    linkedin: \"https://www.linkedin.com/in/max-gerringer-9415b284\",\r\n  },\r\n  {\r\n    image: \"assets/images/jim200x200.jpg\",\r\n    alt: \"Jim\",\r\n    caption: \"Jim Faulkner\",\r\n    description: \"Back End Developer\",\r\n    github: \"https://github.com/jhf1203\",\r\n    linkedin: \"https://www.linkedin.com/in/jim-faulkner-13476534\",\r\n  },\r\n  {\r\n    image: \"assets/images/mark200x200.jpg\",\r\n    alt: \"Mark\",\r\n    caption: \"Mark Speer\",\r\n    description: \"Back End Developer\",\r\n    github: \"https://github.com/mark-speer\",\r\n    linkedin: \"https://www.linkedin.com/in/mark-speer\",\r\n  },\r\n  {\r\n    image: \"assets/images/arlene200x200.jpg\",\r\n    alt: \"Arlene\",\r\n    caption: \"Arlene Rodriguez\",\r\n    description: \"Back End Developer\",\r\n    github: \"https://github.com/arodrigu1\",\r\n    linkedin: \"https://www.linkedin.com/in/arlene-rodriguez-17a22254\",\r\n  },\r\n];\r\n\r\nconst DataCarousel = ({ data }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      {data.map((slide, i) => {\r\n        return (\r\n          <Carousel.Item key={i + \"-slide\"}>\r\n            <img className=\"d-block w-100\" src={slide.image} alt={slide.alt} />\r\n            <Carousel.Caption>\r\n              <h5>{slide.caption}</h5>\r\n              <p>{slide.description}</p>\r\n              <a href={slide.github}>\r\n                <FontAwesomeIcon\r\n                  icon={faGithub}\r\n                  size=\"2x\"\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </a>\r\n              <a href={slide.linkedin}>\r\n                <FontAwesomeIcon\r\n                  icon={faLinkedin}\r\n                  size=\"2x\"\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </a>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nDataCarousel.defaultProps = {\r\n  data\r\n}\r\n\r\nexport default DataCarousel;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/navbar/NavBar\";\r\nimport Footer from \"../components/footer/Footer\";\r\nimport DataCarousel from \"../components/carousel/Carousel\";\r\nimport \"../assets/styles/contact.scss\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container\">\r\n        <div className=\"row text-center\">\r\n          <div className=\"col-md-12 p-3 m-3\">\r\n            <h3>Meet Our Team</h3>\r\n            <div style={{ textTransform: \"uppercase\" }}>\r\n              - T<p className=\"mirror\">E</p>AM-I Produ\r\n              <p className=\"mirror\">c</p>tionsâ„¢ -\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row text-center\">\r\n          {/* \r\n            // TODO: col-1: Logo col-2: Josh col-3: Max col-4: Jim col-5: Mark col-6: Arlene\r\n            // ! Images need to be a 300x500px .jpg\r\n            */}\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"https://via.placeholder.com/300x500\"\r\n              alt=\"Team-I Productions Logo\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img className=\"img-fluid\" src=\"assets/images/josh.jpg\" alt=\"Joshua\" />\r\n          </div>\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img className=\"img-fluid\" src=\"assets/images/max.jpg\" alt=\"Max\" />\r\n          </div>\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img className=\"img-fluid\" src=\"assets/images/jim.jpg\" alt=\"Jim\" />\r\n          </div>\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img className=\"img-fluid\" src=\"assets/images/mark.jpg\" alt=\"Mark\" />\r\n          </div>\r\n          <div className=\"col-md-2 m-0 p-0\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"assets/images/arlene.jpg\"\r\n              alt=\"Arlene\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <DataCarousel />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\";\nimport Contact from \"./pages/Contact\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL + \"/\"}>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}